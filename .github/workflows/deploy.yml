name: Deploy Audit log lambda functions
on:
  push:
    branches:
      - rio-plus-dev
      - rio-plus-uat
      - main

env:
  BASE_DIR: /tmp/source

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Extract tag name
        id: vars
        run: echo ::set-output name=tag::${{ github.sha }}

      - name: Create Directories & Mount EFS
        run: |
            mkdir ${{ env.BASE_DIR }}

      - name: Checkout main repo
        uses: actions/checkout@v2

      - name: load env variables from file
        id: envs
        run: |
          STAGE=`if [[ "${{ github.ref_name }}" == 'main' ]]; then echo "prod"; elif [[ ${{ github.ref_name }} == 'rio-plus-uat' ]]; then echo 'uat'; else echo 'dev'; fi`
          echo "STAGE=${STAGE}" >> $GITHUB_ENV
          cat ".github/${STAGE}.env" >> $GITHUB_ENV
      - name: print envs
        run: env

      - name: Configure AWS account
        run: |
          if [[ "${{ env.STAGE }}" == "dev" ]]; then
            echo "Set DEV AWS account credentials"
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          else
            echo "Set UAT AWS account credentials"
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_UAT_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_UAT_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_REGION=${{ secrets.AWS_UAT_REGION }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get devops git
        run: cd ${{ env.BASE_DIR }} && git clone -b ${{ env.DEVOPS_BRANCH }} --progress https://${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}@github.com/Belavier-Commerce-LCC/rio_plus_devops.git ${{ env.BASE_DIR }}/devops

      - name: Setup Nodejs
        uses: actions/setup-node@v1

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.1
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy with terraform
        working-directory: ${{ env.BASE_DIR }}/devops/terraform/rio-plus/audit_log_lambda/
        run: |
          cd ${{ env.BASE_DIR }}/devops/terraform/rio-plus/audit_log_lambda/
          terraform init -backend-config=${{ env.STAGE }}_conf.hcl -reconfigure
          terraform workspace select ${{ env.STAGE }}
          terraform apply -var src_path=$GITHUB_WORKSPACE -auto-approve